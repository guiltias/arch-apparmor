# $Id$
# Maintainer: Tobias Powalowski <tpowa@archlinux.org>
# Maintainer: Thomas Baechler <thomas@archlinux.org>

pkgbase=linux-apparmor      # Build kernel with a different name
_curkerver=`pacman -Q linux | cut -d\  -f2`
_srcname=linux-`cut -f1 -d- <<< $_curkerver`
pkgver=`cut -f1 -d- <<< $_curkerver`
pkgrel=`cut -f2 -d- <<< $_curkerver`
arch=('i686' 'x86_64')
url="http://www.kernel.org/"
license=('GPL2')
makedepends=('xmlto' 'docbook-xsl' 'kmod' 'inetutils' 'bc')
options=('!strip')
source=("http://www.kernel.org/pub/linux/kernel/v`cut -f1 -d. <<< $_curkerver`.x/${_srcname}.tar.xz"
        "http://www.kernel.org/pub/linux/kernel/v`cut -f1 -d. <<< $_curkerver`.x/patch-${pkgver}.xz"
        # the main kernel config files
        'config' 'config.x86_64'
        # standard config files for mkinitcpio ramdisk
        'linux.preset'
        'change-default-console-loglevel.patch'
        '0001-Bluetooth-allocate-static-minor-for-vhci.patch'
        '0002-module-allow-multiple-calls-to-MODULE_DEVICE_TABLE-p.patch'
        '0003-module-remove-MODULE_GENERIC_TABLE.patch'
        '0005-Revert-Bluetooth-Enable-autosuspend-for-Intel-Blueto.patch'
        '0006-genksyms-fix-typeof-handling.patch'
        '0010-iwlwifi-mvm-delay-enabling-smart-FIFO-until-after-be.patch'
        '0011-kernfs-fix-removed-error-check.patch'
        '0012-fix-saa7134.patch'
        '0015-fix-xsdt-validation.patch'
        'disagree_module_symbol_try_force.patch'
        0002-UBUNTU-SAUCE-AppArmor-basic-networking-rules.patch
        0003-apparmor-Fix-quieting-of-audit-messages-for-network-.patch
        0005-UBUNTU-SAUCE-apparmor-Add-the-ability-to-mediate-mou.patch)

sha256sums=('d66f4ae1045367b834dfbfd784d08b4752ccf46d935412b43d3c4383a4776874'
            'ecc00856830c05736b3f99609bc6d80353c29d2db9b0dffb91eb2d169808cac4'
            'a3cdcf093be969709dbd0e599fe41db9df665e00d1c2b6b8cd0cc31cee7c23b8'
            'a3cdcf093be969709dbd0e599fe41db9df665e00d1c2b6b8cd0cc31cee7c23b8'
            'f0d90e756f14533ee67afda280500511a62465b4f76adcc5effa95a40045179c'
            'faced4eb4c47c4eb1a9ee8a5bf8a7c4b49d6b4d78efbe426e410730e6267d182'
            '6d72e14552df59e6310f16c176806c408355951724cd5b48a47bf01591b8be02'
            '52dec83a8805a8642d74d764494acda863e0aa23e3d249e80d4b457e20a3fd29'
            '65d58f63215ee3c5f9c4fc6bce36fc5311a6c7dbdbe1ad29de40647b47ff9c0d'
            '3fffb01cf97a5a7ab9601cb277d2468c0fb1e1cceba4225915f3ffae3a5694ec'
            'cf2e7a2d00787f754028e7459688c2755a406e632ce48b60952fa4ff7ed6f4b7'
            'c0af4622f75c89fef62183e18b7d49998228d4eaa906c6accaf4aa4ff0134f85'
            '04f44bf5c181d6dc31905937c1bdccb0f5aecaad3a579e99b302502b9cbe0f7a'
            '79359454c9d8446eb55add2b1cdbf8332bd67dafb01fefb5b1ca090225f64d18'
            '384dd13fd4248fd6809da8c6ae29ced55d4a5cacc33ac2ae7522093ec0fb26d4'
            '4c9a0ab9e21a9129996e164ef9fef58caea0a7c3c2e46e10e74700c668f26772'
            'ea41743891e472116ae0ce4fdd075fc8cdca563038141a6ad6cd19ef9571abd4'
            'e202056d184c096a82f6bc33062e2a7a286d9882b62f5b9bebffbfed04b1192a'
            '3215c7dcc9798f7f8432f940c45e396deba96af1d3908d0ea82bf7448f968abf')

_kernelname=${pkgbase#linux}

prepare() {
  cd "${srcdir}/${_srcname}"

  # add upstream patch
  # for 3.14.1-1 - this patch already applied
  #patch -p1 -i "${srcdir}/patch-${pkgver}"

  # add latest fixes from stable queue, if needed
  # http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git

  # set DEFAULT_CONSOLE_LOGLEVEL to 4 (same value as the 'quiet' kernel param)
  # remove this when a Kconfig knob is made available by upstream
  # (relevant patch sent upstream: https://lkml.org/lkml/2011/7/26/227)
  patch -p1 -i "${srcdir}/change-default-console-loglevel.patch"

  # Fix vhci warning in kmod (to restore every kernel maintainer's sanity)
  patch -p1 -i "${srcdir}/0001-Bluetooth-allocate-static-minor-for-vhci.patch"

  # Fix atkbd aliases
  patch -p1 -i "${srcdir}/0002-module-allow-multiple-calls-to-MODULE_DEVICE_TABLE-p.patch"
  patch -p1 -i "${srcdir}/0003-module-remove-MODULE_GENERIC_TABLE.patch"

  # Disable usb autosuspend for intel btusb
  # See http://www.spinics.net/lists/kernel/msg1716461.html
  # Until a solution is found, make sure the driver leaves autosuspend alone
  patch -p1 -i "${srcdir}/0005-Revert-Bluetooth-Enable-autosuspend-for-Intel-Blueto.patch"

  # Fix generation of symbol CRCs
  # http://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=dc53324060f324e8af6867f57bf4891c13c6ef18
  patch -p1 -i "${srcdir}/0006-genksyms-fix-typeof-handling.patch"

  # https://git.kernel.org/cgit/linux/kernel/git/iwlwifi/iwlwifi-fixes.git/commit/?id=12f853a89e29f50b17698e17e73c328a35f1498d
  # FS#39815
  patch -p1 -i "${srcdir}/0010-iwlwifi-mvm-delay-enabling-smart-FIFO-until-after-be.patch"
  
  # fix Xorg crash with i810 chipset due to wrong removed error check
  # References: http://lkml.kernel.org/g/533D01BD.1010200@googlemail.com
  patch -Np1 -i "${srcdir}/0011-kernfs-fix-removed-error-check.patch"

  # fix saa7134 video
  # https://bugs.archlinux.org/task/39904
  # https://bugzilla.kernel.org/show_bug.cgi?id=73361
  patch -Np1 -i "${srcdir}/0012-fix-saa7134.patch"

  # fix xsdt validation bug
  # https://bugs.archlinux.org/task/39811
  # https://bugzilla.kernel.org/show_bug.cgi?id=73911
  patch -Np1 -i "${srcdir}/0015-fix-xsdt-validation.patch"

  # hardcoded retry after disagree symbol module layout
  patch -p1 -i "${srcdir}/disagree_module_symbol_try_force.patch"


  # AppArmor patchset
  if [ -f $srcdir/linux-$pkgver/security/apparmor/net.c ]; then 
    rm $srcdir/linux-$pkgver/security/apparmor/net.c 2> /dev/null
  fi
  if [ -f $srcdir/linux-$pkgver/security/apparmor/include/net.h ]; then
    rm $srcdir/linux-$pkgver/security/apparmor/include/net.h 2> /dev/null
  fi
  patch -Np1 -i "$srcdir/0002-UBUNTU-SAUCE-AppArmor-basic-networking-rules.patch"
  patch -Np1 -i "$srcdir/0003-apparmor-Fix-quieting-of-audit-messages-for-network-.patch"

  if [ -f $srcdir/linux-$pkgver/security/apparmor/include/mount.h ]; then
    rm -v $srcdir/linux-$pkgver/security/apparmor/include/mount.h
  fi
  if [ -f $srcdir/linux-$pkgver/security/apparmor/mount.c ]; then
    rm -v $srcdir/linux-$pkgver/security/apparmor/mount.c
  fi
  patch -Np1 -i "$srcdir/0005-UBUNTU-SAUCE-apparmor-Add-the-ability-to-mediate-mou.patch"

  if [ "${CARCH}" = "x86_64" ]; then
    cat "${srcdir}/config.x86_64" > ./.config
  else
    cat "${srcdir}/config" > ./.config
  fi

  if [ "${_kernelname}" != "" ]; then
    sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"${_kernelname}\"|g" ./.config
    sed -i "s|CONFIG_LOCALVERSION_AUTO=.*|CONFIG_LOCALVERSION_AUTO=n|" ./.config
  fi

  echo CONFIG_SECURITY_APPARMOR_COMPAT_24=y >> ./.config

  # set extraversion to pkgrel
  sed -ri "s|^(EXTRAVERSION =).*|\1 -${pkgrel}|" Makefile

  # don't run depmod on 'make install'. We'll do this ourselves in packaging
  sed -i '2iexit 0' scripts/depmod.sh

  # get kernel version
  make prepare

  yes "" | make config >/dev/null
}

build() {
  cd "${srcdir}/${_srcname}"
  # build!
  make ${MAKEFLAGS} LOCALVERSION= bzImage modules
}

_package() {
  pkgdesc="The ${pkgbase} kernel and modules"
  [ "${pkgbase}" = "linux" ] && groups=('base')
  depends=('coreutils' 'linux-firmware' 'kmod' 'mkinitcpio>=0.7')
  optdepends=('crda: to set the correct wireless channels of your country')
  provides=("kernel26${_kernelname}=${pkgver}")
  conflicts=("kernel26${_kernelname}")
  replaces=("kernel26${_kernelname}")
  backup=("etc/mkinitcpio.d/${pkgbase}.preset")
  install=linux.install

  cd "${srcdir}/${_srcname}"

  KARCH=x86

  # get kernel version
  _kernver="$(make LOCALVERSION= kernelrelease)"
  _basekernel=${_kernver%%-*}
  _basekernel=${_basekernel%.*}

  mkdir -p "${pkgdir}"/{lib/modules,lib/firmware,boot}
  # build modules instead direct copy
  #cp -rT /usr/lib/modules/${pkgver}-${pkgrel}-ARCH/ ${pkgdir}/lib/modules/${_kernver}

  # copy extra modules
  mkdir -p ${pkgdir}/lib/modules/${_kernver}/extra
  cp -rT /usr/lib/modules/${pkgver}-${pkgrel}-ARCH/extra/ ${pkgdir}/lib/modules/${_kernver}/extra

  make LOCALVERSION= INSTALL_MOD_PATH="${pkgdir}" modules_install
  cp arch/$KARCH/boot/bzImage "${pkgdir}/boot/vmlinuz-${pkgbase}"

  # add vmlinux
  install -D -m644 vmlinux "${pkgdir}/usr/src/linux-${_kernver}/vmlinux"

  # install fallback mkinitcpio.conf file and preset file for kernel
  install -D -m644 "${srcdir}/linux.preset" "${pkgdir}/etc/mkinitcpio.d/${pkgbase}.preset"

  # set correct depmod command for install
  sed \
    -e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/" \
    -e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/" \
    -i "${startdir}/linux.install"
  sed \
    -e "1s|'linux.*'|'${pkgbase}'|" \
    -e "s|ALL_kver=.*|ALL_kver=\"/boot/vmlinuz-${pkgbase}\"|" \
    -e "s|default_image=.*|default_image=\"/boot/initramfs-${pkgbase}.img\"|" \
    -e "s|fallback_image=.*|fallback_image=\"/boot/initramfs-${pkgbase}-fallback.img\"|" \
    -i "${pkgdir}/etc/mkinitcpio.d/${pkgbase}.preset"

  # remove source links
  #rm -rf "${pkgdir}"/lib/modules/${_kernver}/source
  rm -f "${pkgdir}"/lib/modules/${_kernver}/{source,build}
  # remove the firmware
  rm -rf "${pkgdir}/lib/firmware"
  # gzip -9 all modules to save 100MB of space
  find "${pkgdir}" -name '*.ko' -exec gzip -9 {} \;
  # make room for external modules
  ln -sfT "../extramodules-${_basekernel}${_kernelname:--ARCH}" "${pkgdir}/lib/modules/${_kernver}/extramodules"
  # add real version for building modules and running depmod from post_install/upgrade
  mkdir -p "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:--ARCH}"
  echo "${_kernver}" > "${pkgdir}/lib/modules/extramodules-${_basekernel}${_kernelname:--ARCH}/version"

  # Now we call depmod...
  depmod -b "$pkgdir" -F System.map "$_kernver"

  # move module tree /lib -> /usr/lib
  mkdir -p "${pkgdir}/usr"
  mv "$pkgdir/lib" "$pkgdir/usr"

}

pkgname=("${pkgbase}")
for _p in ${pkgname[@]}; do
  eval "package_${_p}() {
    _package${_p#${pkgbase}}
  }"
done

# vim:set ts=8 sts=2 sw=2 et:
